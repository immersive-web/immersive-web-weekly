date: 2020-10-20
overview: >
  This week Valve made good on the promise of an Index so I spent a bit of time back in tethered VR after almost a year exclusively using stand-alones like Facebook's Quest and Pico's neo2 eye. I started my journey into XR back when that meant VRML and small-run rigs marketed to academics and the military so having a consumer-ready rig with the fidelity of the Index headset along with the best-in-class Knuckles controllers feels like a milestone. The general movement seems to be away from tethered VR for consumers so perhaps it's also the end of that particular journey. Either way, I'm having great fun with the Index in Windows (especially gravity gloves) and will soon turn my attention toward a fully open stack for XR hardware and experiences.
  A lot happened this week so wall-mount your lighthouses, untangle your cables, and update your firmware because it's time for another Immersive Web Weekly!

signed: Trevor Flowers
links:
  -
    title: User Fingerprinting with Immersive Web Data
    url: https://www.nature.com/articles/s41598-020-74486-y
    author: Mark Roman Miller et al
    authorLink: https://twitter.com/markromanmiller
    category:
      - privacy
      - user study
    content: >
      This [recent user study](https://www.nature.com/articles/s41598-020-74486-y) out of Stanford hints that more work is needed to prevent user fingerprinting on the immersive web.
      <blockquote>"Our work tests the identifiability of users under typical VR viewing circumstances, with no specially designed identifying task. Out of a pool of 511 participants, the system identifies 95% of users correctly when trained on less than 5 min of tracking data per person. We argue these results show nonverbal data should be understood by the public and by researchers as personally identifying data."</blockquote>
  -
    title: Wonderland Engine Cranks Up
    url: https://wonderlandengine.com/
    author: Wonderland Engine team
    category:
      - engine
    content: >
      This week the [Wonderland engine](https://wonderlandengine.com/) team announced [pricing](https://wonderlandengine.com/pricing/) and licensing for their new immersive web toolchain. They've released a WebAssembly-based engine, a visual experience editor, a spatial component library, and a Javascript API for integration with existing web stacks.
  -
    title: Can You Hear Ada's Mic Drop?
    url: https://medium.com/samsung-internet-dev/audio-on-the-web-for-games-and-vr-efcd523a3d58
    author: Ada Rose Cannon
    authorLink: https://ada.is/
    category:
      - tutorial
    content: >
      Continuing her action-packed year of immersive web tutorials, Ada just dropped an overview of the [hows and whys of spatial audio](https://medium.com/samsung-internet-dev/audio-on-the-web-for-games-and-vr-efcd523a3d58) complete with a [rather relaxing experience](https://ada.is/xrgarden/) that WebXR Device API editor Brandon Jones [has suggested](https://twitter.com/Tojiro/status/1317298532630499329) could also be a performance testing tool! 
  -
    title: >
      October 22nd Meetup: WebXR with BabylonJS
    url: https://www.meetup.com/hololens-mr/events/274042144/
    author: Ayşegül Yönet
    authorLink: https://github.com/Yonet/MixedRealityResources
    content: >
      This Thursday our very own co-chair, Ayşegül Yönet, is [leading a free Meetup](https://www.meetup.com/hololens-mr/events/274042144/) about the immersive web in general and using Microsoft's Babylon.js rendering engine in particular. The Babylon.js team has been on a roll (see below) so your editor is looking forward to seeing what's new.
  -
    title: XR Journey From Native to The Web
    url: https://babylonjs.medium.com/from-unity-to-babylon-js-how-is-the-journey-c71f79482aa3
    author: Patrick Ryan
    authorLink: https://twitter.com/PatrickCRyan
    content: >
      This detailed article from a technical artist at Microsoft describes the (somewhat anxiety producing) move from Unity to Babylon.js and WebXR for UX design and prototyping. It details some of the innovation that Microsoft have made in the toolchain for creating experiences that (in the opinion of the editor) is more important than having the fastest renderer. If you're used to Unity tools like Shader Forge then you might be pleasantly surprised by their [node material editor](https://doc.babylonjs.com/how_to/node_material#using-the-node-material-editor).  
